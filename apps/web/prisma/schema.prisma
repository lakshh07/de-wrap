generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid()) @map("id")
  clerkId        String   @unique @map("clerk_id")
  email          String   @unique @map("email")
  firstName      String?  @map("first_name")
  lastName       String?  @map("last_name")
  imageUrl       String?  @map("image_url")
  username       String?  @unique @map("username")
  totalBalance   String?  @map("total_balance")
  preferredToken String?  @map("preferred_token")
  preferredChain Int?     @map("preferred_chain")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  invoices Invoice[]
  payouts  Payout[]
}

enum InvoiceStatus {
  PENDING
  ONGOING
  COMPLETED
  CANCELLED
  FAILED
}

model Invoice {
  id             String        @id @default(uuid()) @map("id")
  userId         String        @map("user_id")
  user           User          @relation(fields: [userId], references: [id])
  name           String        @map("name")
  amount         String        @map("amount_in_cents")
  status         InvoiceStatus @default(PENDING) @map("status")
  preferredToken String        @map("preferred_token")
  preferredChain Int           @map("preferred_chain")
  metadata       Json?         @map("metadata")
  details        String?       @default("") @map("details")
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")

  payouts Payout[]
}

enum PayoutStatus {
  PENDING
  ONGOING
  COMPLETED
  CANCELLED
  FAILED
}

model Payout {
  id          String       @id @default(uuid()) @map("id")
  userId      String       @map("user_id")
  user        User         @relation(fields: [userId], references: [id])
  invoiceId   String       @map("invoice_id")
  invoice     Invoice      @relation(fields: [invoiceId], references: [id])
  status      PayoutStatus @default(PENDING) @map("status")
  direction   String?      @map("direction")
  amountPaid  String?      @map("amount_paid_in_cents")
  sourceToken String?      @map("source_token")
  tokenPrice  String?      @map("token_price")
  sourceChain Int?         @map("source_chain")
  details     String?      @default("") @map("details")
  txHash      String?      @map("tx_hash")
  txError     String?      @map("tx_error")
  metadata    Json?        @map("metadata")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  @@index([userId])
  @@index([invoiceId])
}
